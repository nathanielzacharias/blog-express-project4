require("dotenv").config();

const connectToMongo = require("./database/mongodb");
const mongoose = require("mongoose");
const express = require("express");
const cors = require("cors");
const req = require("express/lib/request");
const app = express();
// const port = process.env.PORT || 8443;
const port = process.env.PORT;

//private IP of the instance on the hosting platform (on AWS: private IP address)
const host = '' ;

const http = require('http');

//for SSL/TLS
const fs = require('fs')
const https = require('https')

//use body-parser
const bodyParser = require("body-parser")
app.use(bodyParser.urlencoded({extended: true})) 
app.use(bodyParser.json()) 

// allow cross-origin requests
app.use(function (req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header(
    "Access-Control-Allow-Headers",
    "Origin, X-Requested-With, Content-Type, Accept"
  );
  next();
});
app.use(express.json());
app.use(
  cors({
    origin: "*",
  })
);

//serve static file of SSL/TLS cert in hidden .well-known folder
app.use(express.static(__dirname + '/static', { dotfiles: 'allow' }))

//routes
const userRouter = require("./routers/userRoutes");
const articleRouter = require("./routers/articleRoutes");
const publishRouter = require("./routers/publishRoutes");

//Router
app.use("/api/v1/user", userRouter);
app.use("/api/v1/main", articleRouter);
app.use("/api/v1/articles", publishRouter);
app.get('/', (req, res) => {
  res.send("Hello I'm Nat's blogging Backend")
})

//Server //pre SSL/TLS
// app.listen(port, async () => {
//   try {
//     await mongoose.connect(connectToMongo.uri, {
//       dbName: process.env.DB_NAME,
//       useNewUrlParser: true,
//       useUnifiedTopology: true,
//     });
//   } catch (err) {
//     console.log("Failed to connect to Mongo Atlas. Error is: ", err);
//     process.exit(1);
//   }

//   console.log(`Clog blogging system is listening on port ${port}`);
// });


//Server //with SSL/TLS
//http server alongside https
http.createServer(app).listen(port, async () => {
  try {
    await mongoose.connect(connectToMongo.uri, {
      dbName: process.env.DB_NAME,
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
  } catch (err) {
    console.log("Failed to connect to Mongo Atlas. Error is: ", err);
    process.exit(1);
  }

  console.log(`Blog BE listening on port ${port} without https`)
})
//https server
// https
//   .createServer(
//     {
//       //fill in the cert and key path generated by certbot 
//       // cert: fs.readFileSync('/etc/letsencrypt/.pem'),
//       // key: fs.readFileSync('/etc/letsencrypt/.pem'),
// //      ca: fs.readFileSync('/etc/letsencrypt/.pem'),
//     },
//     app
//   )

//   .listen(port, host, async () => {
//     try {
//       await mongoose.connect(connectToMongo.uri, {
//         dbName: process.env.DB_NAME,
//         useNewUrlParser: true,
//         useUnifiedTopology: true,
//       });
//     } catch (err) {
//       console.log("Failed to connect to Mongo Atlas. Error is: ", err);
//       process.exit(1);
//     }

//     console.log(`Blog BE listening on ${port}`)

//   //   console.log({
//   //     host            : process.env.ATLAS_CLUSTER,
//   //     user            : process.env.ATLAS_USER,
//   //     password        : process.env.ATLAS_PASSWORD,
//   //     database        : process.env.DB_NAME
//   //  })

//   })

